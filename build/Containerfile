ARG FEDORA_VERSION
ARG PACKAGES_REGISTRY

# hadolint ignore=DL3006,DL3007
FROM ${PACKAGES_REGISTRY}/packages:latest as packages

FROM quay.io/fedora/fedora-toolbox:${FEDORA_VERSION} as node

# hadolint ignore=DL3041
RUN dnf install -y nodejs npm && dnf clean all

# if there are no pre-existing builds for a package, might need to build it
# hadolint ignore=DL3041
RUN dnf install -y make gcc-c++ && dnf clean all

WORKDIR /vendor

COPY package.json .

COPY yarn.lock .

RUN npm install --global yarn@latest && yarn install

FROM quay.io/fedora/fedora-toolbox:${FEDORA_VERSION} as python

# cargo, maturin, rust, setuptools-rust can be required by some python packages
# hadolint ignore=DL3041
RUN dnf install -y cargo gcc libffi libffi-devel maturin python3 python3-devel python3-pip python3-poetry python3-setuptools python3-setuptools-rust python3-wheel rust && \
    dnf clean all

WORKDIR /vendor

COPY requirements.txt .

# hadolint ignore=DL3013
RUN python3 -m pip install --prefix /vendor/python --no-cache-dir --upgrade --progress-bar off pip setuptools wheel && \
    python3 -m pip install --prefix /vendor/python --no-cache-dir --progress-bar off -r /vendor/requirements.txt --ignore-installed --no-build-isolation

FROM quay.io/fedora/fedora-toolbox:${FEDORA_VERSION}

ARG FEDORA_VERSION

# hadolint ignore=SC2046,DL3016,DL3041
RUN dnf install -y "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-${FEDORA_VERSION}.noarch.rpm" \
    "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-${FEDORA_VERSION}.noarch.rpm" && \
    dnf clean all

COPY fedora-packages.txt /vendor/

COPY rootfs/etc/yum.repos.d/ /etc/yum.repos.d/

# hadolint ignore=SC2046,DL3016,DL3041
RUN dnf install -y $(awk '!/^($|#)/ { print $1 }' /vendor/fedora-packages.txt) && \
    dnf clean all

# https://librewolf.net/installation/fedora/
# hadolint ignore=DL3041
RUN dnf copr enable -y bgstack15/AfterMozilla && \
    dnf install --refresh -y librewolf && \
    dnf clean all

# hadolint ignore=DL3041
RUN dnf install -y libxshmfence && \
    dnf install -y codium && \
    dnf clean all

ARG PHANTOMJS_VERSION="2.1.1"

RUN curl -sSL -o /tmp/phantomjs.tar.bz2 "https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2" && \
    tar xvjf /tmp/phantomjs.tar.bz2 -C /usr/local/share && \
    rm -rvf /tmp/phantomjs.tar.bz2

RUN curl -sSL -o /tmp/ngrok.tar.gz "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz" && \
    tar xzvf /tmp/ngrok.tar.gz -C /usr/local/bin && \
    rm -rf /tmp/ngrok.tar.gz

COPY rootfs/usr/share/fonts/ /usr/share/fonts/

RUN fc-cache -f

COPY rootfs/ /

COPY --from=node /vendor/node_modules/ /vendor/node_modules/

COPY --from=python /vendor/python/ /vendor/python/

COPY --from=packages /dist/ /vendor/bin/

# add python, node, and packages bin to PATH
ENV PATH="/vendor/bin:/vendor/python/bin:/vendor/node_modules/.bin:${PATH}"

ENV WORKSPACE="${HOME}/Development"
